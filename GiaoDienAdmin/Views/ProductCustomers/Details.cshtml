@model GiaoDienAdmin.Models.Product

@{
    ViewData["Title"] = Model.Name;
}



<hr class="shadow-hr" />
<div class="container mt-5">
    <div class="row">
        <!-- Trang chủ /Sản Phẩm -->
        <p class="text-left">
            <span>Trang chủ/</span><span class="text-success">Sản phẩm</span>
        </p>

        <!-- Hình ảnh sản phẩm -->
        <div class="col-md-6">
            <div class="product-image">
                @if (!string.IsNullOrEmpty(Model.Img))
                {
                    // Fetching image from API
                    var fullImageUrl = $"https://localhost:7195{Model.Img}";
                    <img src="@fullImageUrl" alt="@Model.Name" class="img-fluid" style="object-fit: cover; height: 400x; width: 100%; border-radius: 5px;" />
                }
                else
                {
                // Default image if none exists
                    <img src="/images/default-placeholder.png" alt="Ảnh mặc định" class="img-fluid" style="height: 400px; width: 100%; opacity: 0.5; border-radius: 5px;" />
                }

            </div>
        </div>

        <!-- Thông tin sản phẩm -->
        <div class="col-md-6">
            <h2 class="mt-3 text-success" style="font-size: 36px;">@Model.Name</h2>

            <p>SKU: @Model.Id</p>
            <div class="d-flex align-items-center justify-content-between mt-3">
                <h5 class="text-success">@Model.Price.ToString("C3") </h5>

                <!-- Số lượng -->
                <div class="topping-controls d-flex align-items-center">
                    <button class="btn btn-outline-secondary px-2" id="decrease-quantity">-</button>
                    <input type="text" id="quantity" value="1" class="form-control text-center mx-2 bg-success text-white" />
                    <button class="btn btn-outline-secondary px-2" id="increase-quantity">+</button>
                </div>
            </div>

            <!-- Chọn kích cỡ -->
            <div class="mb-3">
                <h6 class="text-success">Chọn kích cỡ</h6>
                <div class="btn-group" role="group">
                    <!-- Ví dụ: Dữ liệu kích cỡ có thể lấy từ cơ sở dữ liệu -->
                    <div class="size d-flex flex-column align-items-center">
                        <button type="button" class="btn-outline-success p-2 border-light">M</button>
                        <button class="btn-outline-secondary p-0 mt-0" disabled>0<sup>đ</sup></button>
                    </div>
                    <div class="size d-flex flex-column align-items-center ms-3">
                        <button type="button" class="btn-outline-success p-2 border-light">L</button>
                        <button class="btn-outline-secondary bg-success text-light p-0 mt-0" disabled>+5000<sup>đ</sup></button>
                    </div>
                </div>
            </div>

            <!-- Độ ngọt -->
            <div class="mb-3">
                <h6 class="text-success">Ngọt</h6>
                <div class="btn-group-toggle d-flex gap-2" role="group">
                    <!-- Các mức độ ngọt có thể lấy từ cơ sở dữ liệu -->
                    <button type="button" class="btn btn-outline-success">Ít</button>
                    <button type="button" class="btn btn-outline-success active ">Bình thường</button>
                    <button type="button" class="btn btn-outline-success">Nhiều</button>
                    <button type="button" class="btn btn-outline-success ">Không</button>
                </div>
            </div>

            <!-- Đá -->
            <div class="mb-3">
                <h6 class="text-success">Đá</h6>
                <div class="btn-group-toggle d-flex gap-2" role="group">
                    <button type="button" class="btn btn-outline-success">Ít</button>
                    <button type="button" class="btn btn-outline-success active">Bình thường</button>
                    <button type="button" class="btn btn-outline-success">Nhiều</button>
                </div>
            </div>

            <!-- Chọn Topping -->
            <div>
                <h6 class="text-success">Chọn Topping</h6>
                <!-- Các topping có thể lấy từ cơ sở dữ liệu -->
                <div class="topping-item">
                    <div class="topping-name">
                        <span>Topping vải (4 trái)</span>
                        <span class="topping-price">20.000 <sup>đ</sup></span>
                    </div>
                    <div class="topping-controls d-flex align-items-center">
                        <button class="btn btn-outline-secondary">-</button>
                        <span class="px-2">0</span>
                        <button class="btn btn-outline-secondary">+</button>
                    </div>
                </div>

                <div class="topping-item">
                    <div class="topping-name">
                        <span>Topping thạch konjac</span>
                        <span class="topping-price">15.000 <sup>đ</sup></span>
                    </div>
                    <div class="topping-controls d-flex align-items-center">
                        <button class="btn btn-outline-secondary">-</button>
                        <span class="px-2">0</span>
                        <button class="btn btn-outline-secondary">+</button>
                    </div>
                </div>

                <div class="topping-item">
                    <div class="topping-name">
                        <span>Đào (3 miếng)</span>
                        <span class="topping-price">25.000 <sup>đ</sup></span>
                    </div>
                    <div class="topping-controls d-flex align-items-center">
                        <button class="btn btn-outline-secondary">-</button>
                        <span class="px-2">0</span>
                        <button class="btn btn-outline-secondary">+</button>
                    </div>
                </div>

                <div class="topping-item">
                    <div class="topping-name">
                        <span>Topping đác thơm</span>
                        <span class="topping-price">20.000 <sup>đ</sup></span>
                    </div>
                    <div class="topping-controls d-flex align-items-center">
                        <button class="btn btn-outline-secondary">-</button>
                        <span class="px-2">0</span>
                        <button class="btn btn-outline-secondary">+</button>
                    </div>
                </div>
            </div>

            <a href="/Home/CartProduct" class="btn btn-success mt-4 w-100 mb-3" id="addToCart">
                <i class="fa-solid fa-cart-arrow-down"></i> Thêm vào giỏ hàng: <span id="totalPrice">@Model.Price.ToString("N0") đ</span>
            </a>

        </div>
    </div>
</div>

<section class="py-5">
    <div class="container">
        <h5 class="text-left mb-4" style="color: #28a745">Sản phẩm gợi ý (Thức Uống)</h5>
        <div class="row g-4">
            @if (ViewBag.SuggestedProducts is IEnumerable<GiaoDienAdmin.Models.Product> suggestedProducts && suggestedProducts.Any())
            {
                @foreach (var product in suggestedProducts)
                {
                    <div class="col-md-3">
                        <div class="product-card">
                            <span class="heart-icon">
                                <i class="fa-regular fa-heart"></i>
                            </span>
                            <a href="@Url.Action("Details", "ProductCustomers", new { id = product.Id })" class="product-link">
                                <div class="product-content">
                                    @if (!string.IsNullOrEmpty(product.Img))
                                    {
                                        var fullImageUrl = $"https://localhost:7195{product.Img}";
                                        <img src="@fullImageUrl" alt="@product.Name" class="img-fluid" style="object-fit: cover; height: 200px; width: 100%; border-radius: 5px;" />
                                    }
                                    else
                                    {
                                        <img src="/images/default-placeholder.png" alt="Ảnh mặc định" class="img-fluid" style="height: 200px; width: 100%; opacity: 0.5; border-radius: 5px;" />
                                    }
                                    <h6 class="product-title">@product.Name</h6>
                                    <div class="product-price">@product.Price.ToString("C3") đ</div>
                                </div>
                            </a>
                            <a href="@Url.Action("AddToCart", "Cart", new { id = product.Id })" class="btn btn-buy mt-3">
                                <i class="fas fa-cart-plus cart-icon"></i> Đặt mua
                            </a>
                        </div>
                    </div>
                }
            }
            else
            {
                <p class="text-muted">Không có sản phẩm gợi ý cho Thức Uống.</p>
            }
        </div>
    </div>
</section>







<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Lấy phần tử cần thao tác
        let quantityInput = document.getElementById("quantity");
        let basePrice = parseInt(@Model.Price); // Lấy giá từ backend
        let currentPrice = basePrice;
        let totalPriceElement = document.getElementById("totalPrice");
        let selectedSize = "M"; // Mặc định là size M

        // Xử lý tăng giảm số lượng
        document.getElementById("increase-quantity").addEventListener("click", function () {
            let value = parseInt(quantityInput.value);
            if (!isNaN(value)) {
                quantityInput.value = value + 1;
                updateTotalPrice();
            }
        });

        document.getElementById("decrease-quantity").addEventListener("click", function () {
            let value = parseInt(quantityInput.value);
            if (!isNaN(value) && value > 1) {
                quantityInput.value = value - 1;
                updateTotalPrice();
            }
        });

        // Chọn kích cỡ sản phẩm (M, L)
        document.querySelectorAll(".btn-outline-success.p-2").forEach(button => {
            button.addEventListener("click", function () {
                document.querySelectorAll(".btn-outline-success.p-2").forEach(btn => btn.classList.remove("active"));
                this.classList.add("active");

                selectedSize = this.innerText.trim(); // Lấy kích cỡ

                if (selectedSize === "L") {
                    currentPrice = basePrice + 5000; // Giá L +5000đ
                } else {
                    currentPrice = basePrice;
                }

                updateTotalPrice();
            });
        });

        // Xử lý chọn topping
        document.querySelectorAll(".topping-item").forEach(topping => {
            let minusBtn = topping.querySelector(".btn-outline-secondary:first-child");
            let plusBtn = topping.querySelector(".btn-outline-secondary:last-child");
            let quantitySpan = topping.querySelector(".px-2");
            let priceElement = topping.querySelector(".topping-price");

            // Chuyển đổi giá topping từ text thành số nguyên
            let toppingPrice = parseInt(priceElement.innerText.replace(/[^\d]/g, ""), 10);

            minusBtn.addEventListener("click", function () {
                let value = parseInt(quantitySpan.innerText);
                if (value > 0) {
                    quantitySpan.innerText = value - 1;
                    updateTotalPrice();
                }
            });

            plusBtn.addEventListener("click", function () {
                let value = parseInt(quantitySpan.innerText);
                quantitySpan.innerText = value + 1;
                updateTotalPrice();
            });
        });

        // Chọn độ ngọt và đá
        document.querySelectorAll(".btn-group-toggle .btn-outline-success").forEach(button => {
            button.addEventListener("click", function () {
                let group = this.parentElement;
                group.querySelectorAll(".btn-outline-success").forEach(btn => btn.classList.remove("active"));
                this.classList.add("active");
            });
        });

        // Cập nhật tổng giá tiền
        function updateTotalPrice() {
            let quantity = parseInt(document.getElementById("quantity").value);
            let basePrice = parseInt(@Model.Price);
            let selectedSize = document.querySelector(".btn-outline-success.p-2.active")?.innerText.trim() || "M";
            let currentPrice = (selectedSize === "L") ? basePrice + 5000 : basePrice;

            let totalToppingPrice = 0;

            document.querySelectorAll(".topping-item").forEach(topping => {
                let toppingQuantity = parseInt(topping.querySelector(".px-2").innerText);
                let toppingPrice = parseInt(topping.querySelector(".topping-price").innerText.replace(/[^\d]/g, ""), 10);
                totalToppingPrice += toppingQuantity * toppingPrice;
            });

            let total = (currentPrice * quantity) + totalToppingPrice;

            document.getElementById("totalPrice").innerText = total.toLocaleString("vi-VN") + " đ";
        }

    });
</script>


